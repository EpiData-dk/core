
 (* Unicode recognition *)
 (* 2 bytes unicodes *)

 (* 3 bytes unicodes *)

 (* 4 bytes unicodes  *)

 (* compound *)

const normal = 2;
const comment = 4;
const mcomment = 6;
const text = 8;
 
  var
    commentlvl: integer = 0;


function yylex : Integer;

procedure yyaction ( yyruleno : Integer );
  (* local definitions: *)

  var
    result : integer;
  
 (* Statement tokens - add here for new commands *)
begin
  (* actions: *)
  case yyruleno of
  1:
                	return(OPDefine);
  2:
              		return(OPInfo);
  3:
              		return(OPNote);
  4:
                 	return(OPWarning);
  5:
              		return(OPGoto);
  6:
               		return(OPWrite);
  7:
               		return(OPClear);
  8:
                 	return(OPMissing);


 (* General tokens *)
 (* Do not edit anything below this line unless you know   *)
 (* what you are doing!                                    *)
 (* ====================================================== *)

 (* Begin comment states *)
  9:
            		start(comment);  (* Comments using "//" (single line comments) *)
  10:
            		start(mcomment); (* Comments using "(* *)" *)

 (* Begin text reading state *)
  11:
                        begin
			  yylval.yyPString := nil;
			  start(text);
			end;

 (* Constants tokens *)
  12:
                        return(OPTrue);
  13:
                        return(OPFalse);

 (* Binary OPerator tokens *)
  14:
                        return(OPOr);
  15:
                        return(OPAnd);
  16:
                        return(OPMod);
  17:
                        return(OPDiv);
  18:
                        return(OPMult);
  19:
                        return(OPPlus);
  20:
                        return(OPMinus);
  21:
                        return(OPDivide);

 (* Unary OPerators *)
  22:
                        return(OPNot);
 (* unary minus would be here too, but is identified in the binary Operator section *)
   
 (* Comparison tokens *)
  23:
                        return(OPEQ);
  24:
                        return(OPNEQ);
  25:
                        return(OPLT);
  26:
                        return(OPLTE);
  27:
                        return(OPGT);
  28:
                        return(OPGTE);

 (* Internal Keyword tokens *)
  29:
               		return(OPBegin);
  30:
             		return(OPEnd);
  31:
                        return(OPIf);
  32:
                        return(OPThen);
  33:
                        return(OPElse);

 (* Typeident/Typecast tokens *)
  34:
                        return(OPStringType);
  35:
                        return(OPIntegerType);
  36:
                        return(OPFloatType);
  37:
                        return(OPBooleanType);
  38:
              		return(OPDateType);

 (* Misc. tokens *)
  39:
                        return(OPAssign);      
  40:
                        return(OPOpenParan);      
  41:
                        return(OPCloseParan);
  42:
                        return(OPSemicolon);      (* Command seperator *)
  43:
                        return(OPPeriod);         (* Missing value identifier *)
  44:
                        return(OPComma);
  45:
                        return(OPColon);
 // <normal>"["             return(OPOpenBracket);    (* L. bracket for variable indexing *)
 // <normal>"]"             return(OPCloseBracket);   (* R. bracket for variable indexing *)

 (* Special case tokens *)
  46:
                      ;                           (* ignore whitespace *)
  47:
                        yyaccept;

 (* Identifiers *)
  48:
                      
                        begin
                          yylval.yyIdString := yytext;
                          return(OPIdentifier);
                        end;

 (* Recnumber - special case identifier *)
  49:
                        begin
                          yylval.yyIdString := 'RECNUMBER';
                          return(OPIdentifier);
                        end;

 (* Integer *)
  50:
                        begin
                          val(yytext, yylval.yyEpiInteger, result);
                          if result=0 then
                            return(OPIntegerLiteral)
                          else
                            return(OPIllegal);
                        end;

 (* Floating point *)
  51:
                                         
                        begin
                          val(yytext, yylval.yyEpiFloat, result);
                          if (Result = 0) or
                             TryStrToFloat(yytext, yylval.yyEpiFloat)
                          then
                            return(OPFloatLiteral)
                          else
                            return(OPIllegal);
                        end;

 (* Hex numbers (starts with $) *)
  52:
                        begin
                          val(yytext, yylval.yyEpiInteger, result);
                          if result=0 then
                            return(OPIntegerLiteral)
                          else
                            return(OPIllegal);
                        end;

  53:
         		yyerror('NOT ACCEPTED: ' + yytext );

 (* Comment states *)
  54:
                        start(normal);  (* back to normal state after newline*)
  55:
                        ;               (* ignore rest *)
  56:
              		begin
 	                  { Increase comment lvl, such that nesten comments are allowed }
			  inc(commentlvl);
			end;
  57:
                        begin
			  if commentlvl = 0 then
			    (* back to normal state *)
			    start(normal)  
			  else
			    (* decrease nested comment level *)
			    dec(commentlvl);
			end;
  58:
                        ;               (* ignore rest *)


 (* String reading (for filenames, OPtions, etc.) *)
  59:
                        begin
                          return(OPStringLiteral);
			  start(normal);
                        end;  
  60:
        		return(OPIllegal);  (* Unterminated string *)
  61:
              		yylval.yyPString := NewStr(yytext);


  end;
end(*yyaction*);

(* DFA table: *)

type YYTRec = record
                cc : set of Char;
                s  : Integer;
              end;

const

yynmarks   = 211;
yynmatches = 211;
yyntrans   = 1276;
yynstates  = 210;

yyk : array [1..yynmarks] of Integer = (
  { 0: }
  { 1: }
  { 2: }
  { 3: }
  { 4: }
  { 5: }
  { 6: }
  { 7: }
  { 8: }
  61,
  { 9: }
  61,
  { 10: }
  48,
  53,
  { 11: }
  48,
  53,
  { 12: }
  48,
  53,
  { 13: }
  48,
  53,
  { 14: }
  48,
  53,
  { 15: }
  48,
  53,
  { 16: }
  48,
  53,
  { 17: }
  21,
  53,
  { 18: }
  40,
  53,
  { 19: }
  11,
  53,
  { 20: }
  48,
  53,
  { 21: }
  48,
  53,
  { 22: }
  48,
  53,
  { 23: }
  48,
  53,
  { 24: }
  18,
  53,
  { 25: }
  19,
  53,
  { 26: }
  20,
  53,
  { 27: }
  23,
  53,
  { 28: }
  25,
  53,
  { 29: }
  27,
  53,
  { 30: }
  48,
  53,
  { 31: }
  48,
  53,
  { 32: }
  48,
  53,
  { 33: }
  45,
  53,
  { 34: }
  41,
  53,
  { 35: }
  42,
  53,
  { 36: }
  43,
  53,
  { 37: }
  44,
  53,
  { 38: }
  46,
  53,
  { 39: }
  47,
  { 40: }
  48,
  53,
  { 41: }
  53,
  { 42: }
  53,
  { 43: }
  53,
  { 44: }
  53,
  { 45: }
  53,
  { 46: }
  53,
  { 47: }
  53,
  { 48: }
  53,
  { 49: }
  53,
  { 50: }
  50,
  51,
  53,
  { 51: }
  53,
  { 52: }
  53,
  { 53: }
  54,
  { 54: }
  55,
  { 55: }
  58,
  { 56: }
  58,
  { 57: }
  58,
  { 58: }
  59,
  { 59: }
  60,
  { 60: }
  61,
  { 61: }
  48,
  { 62: }
  48,
  { 63: }
  48,
  { 64: }
  48,
  { 65: }
  { 66: }
  { 67: }
  { 68: }
  { 69: }
  { 70: }
  { 71: }
  { 72: }
  { 73: }
  48,
  { 74: }
  48,
  { 75: }
  31,
  48,
  { 76: }
  48,
  { 77: }
  48,
  { 78: }
  48,
  { 79: }
  48,
  { 80: }
  48,
  { 81: }
  48,
  { 82: }
  48,
  { 83: }
  9,
  { 84: }
  10,
  { 85: }
  48,
  { 86: }
  48,
  { 87: }
  48,
  { 88: }
  48,
  { 89: }
  14,
  48,
  { 90: }
  48,
  { 91: }
  24,
  { 92: }
  26,
  { 93: }
  28,
  { 94: }
  48,
  { 95: }
  48,
  { 96: }
  48,
  { 97: }
  48,
  { 98: }
  48,
  { 99: }
  39,
  { 100: }
  46,
  { 101: }
  { 102: }
  { 103: }
  { 104: }
  { 105: }
  { 106: }
  { 107: }
  { 108: }
  49,
  { 109: }
  50,
  51,
  { 110: }
  { 111: }
  { 112: }
  52,
  { 113: }
  56,
  { 114: }
  57,
  { 115: }
  48,
  { 116: }
  17,
  48,
  { 117: }
  48,
  { 118: }
  { 119: }
  { 120: }
  { 121: }
  { 122: }
  { 123: }
  { 124: }
  { 125: }
  { 126: }
  { 127: }
  { 128: }
  { 129: }
  { 130: }
  { 131: }
  { 132: }
  { 133: }
  48,
  { 134: }
  48,
  { 135: }
  22,
  48,
  { 136: }
  48,
  { 137: }
  48,
  { 138: }
  48,
  { 139: }
  48,
  { 140: }
  48,
  { 141: }
  16,
  48,
  { 142: }
  48,
  { 143: }
  48,
  { 144: }
  48,
  { 145: }
  48,
  { 146: }
  15,
  48,
  { 147: }
  48,
  { 148: }
  48,
  { 149: }
  30,
  48,
  { 150: }
  48,
  { 151: }
  48,
  { 152: }
  { 153: }
  { 154: }
  { 155: }
  51,
  { 156: }
  { 157: }
  51,
  { 158: }
  48,
  { 159: }
  38,
  48,
  { 160: }
  { 161: }
  { 162: }
  { 163: }
  { 164: }
  { 165: }
  { 166: }
  { 167: }
  { 168: }
  { 169: }
  { 170: }
  2,
  48,
  { 171: }
  48,
  { 172: }
  3,
  48,
  { 173: }
  48,
  { 174: }
  48,
  { 175: }
  5,
  48,
  { 176: }
  48,
  { 177: }
  48,
  { 178: }
  12,
  48,
  { 179: }
  32,
  48,
  { 180: }
  48,
  { 181: }
  48,
  { 182: }
  48,
  { 183: }
  48,
  { 184: }
  33,
  48,
  { 185: }
  48,
  { 186: }
  48,
  { 187: }
  { 188: }
  { 189: }
  { 190: }
  48,
  { 191: }
  48,
  { 192: }
  6,
  48,
  { 193: }
  7,
  48,
  { 194: }
  48,
  { 195: }
  13,
  48,
  { 196: }
  36,
  48,
  { 197: }
  29,
  48,
  { 198: }
  48,
  { 199: }
  48,
  { 200: }
  1,
  48,
  { 201: }
  48,
  { 202: }
  48,
  { 203: }
  48,
  { 204: }
  48,
  { 205: }
  34,
  48,
  { 206: }
  35,
  48,
  { 207: }
  4,
  48,
  { 208: }
  8,
  48,
  { 209: }
  37,
  48
);

yym : array [1..yynmatches] of Integer = (
{ 0: }
{ 1: }
{ 2: }
{ 3: }
{ 4: }
{ 5: }
{ 6: }
{ 7: }
{ 8: }
  61,
{ 9: }
  61,
{ 10: }
  48,
  53,
{ 11: }
  48,
  53,
{ 12: }
  48,
  53,
{ 13: }
  48,
  53,
{ 14: }
  48,
  53,
{ 15: }
  48,
  53,
{ 16: }
  48,
  53,
{ 17: }
  21,
  53,
{ 18: }
  40,
  53,
{ 19: }
  11,
  53,
{ 20: }
  48,
  53,
{ 21: }
  48,
  53,
{ 22: }
  48,
  53,
{ 23: }
  48,
  53,
{ 24: }
  18,
  53,
{ 25: }
  19,
  53,
{ 26: }
  20,
  53,
{ 27: }
  23,
  53,
{ 28: }
  25,
  53,
{ 29: }
  27,
  53,
{ 30: }
  48,
  53,
{ 31: }
  48,
  53,
{ 32: }
  48,
  53,
{ 33: }
  45,
  53,
{ 34: }
  41,
  53,
{ 35: }
  42,
  53,
{ 36: }
  43,
  53,
{ 37: }
  44,
  53,
{ 38: }
  46,
  53,
{ 39: }
  47,
{ 40: }
  48,
  53,
{ 41: }
  53,
{ 42: }
  53,
{ 43: }
  53,
{ 44: }
  53,
{ 45: }
  53,
{ 46: }
  53,
{ 47: }
  53,
{ 48: }
  53,
{ 49: }
  53,
{ 50: }
  50,
  51,
  53,
{ 51: }
  53,
{ 52: }
  53,
{ 53: }
  54,
{ 54: }
  55,
{ 55: }
  58,
{ 56: }
  58,
{ 57: }
  58,
{ 58: }
  59,
{ 59: }
  60,
{ 60: }
  61,
{ 61: }
  48,
{ 62: }
  48,
{ 63: }
  48,
{ 64: }
  48,
{ 65: }
{ 66: }
{ 67: }
{ 68: }
{ 69: }
{ 70: }
{ 71: }
{ 72: }
{ 73: }
  48,
{ 74: }
  48,
{ 75: }
  31,
  48,
{ 76: }
  48,
{ 77: }
  48,
{ 78: }
  48,
{ 79: }
  48,
{ 80: }
  48,
{ 81: }
  48,
{ 82: }
  48,
{ 83: }
  9,
{ 84: }
  10,
{ 85: }
  48,
{ 86: }
  48,
{ 87: }
  48,
{ 88: }
  48,
{ 89: }
  14,
  48,
{ 90: }
  48,
{ 91: }
  24,
{ 92: }
  26,
{ 93: }
  28,
{ 94: }
  48,
{ 95: }
  48,
{ 96: }
  48,
{ 97: }
  48,
{ 98: }
  48,
{ 99: }
  39,
{ 100: }
  46,
{ 101: }
{ 102: }
{ 103: }
{ 104: }
{ 105: }
{ 106: }
{ 107: }
{ 108: }
  49,
{ 109: }
  50,
  51,
{ 110: }
{ 111: }
{ 112: }
  52,
{ 113: }
  56,
{ 114: }
  57,
{ 115: }
  48,
{ 116: }
  17,
  48,
{ 117: }
  48,
{ 118: }
{ 119: }
{ 120: }
{ 121: }
{ 122: }
{ 123: }
{ 124: }
{ 125: }
{ 126: }
{ 127: }
{ 128: }
{ 129: }
{ 130: }
{ 131: }
{ 132: }
{ 133: }
  48,
{ 134: }
  48,
{ 135: }
  22,
  48,
{ 136: }
  48,
{ 137: }
  48,
{ 138: }
  48,
{ 139: }
  48,
{ 140: }
  48,
{ 141: }
  16,
  48,
{ 142: }
  48,
{ 143: }
  48,
{ 144: }
  48,
{ 145: }
  48,
{ 146: }
  15,
  48,
{ 147: }
  48,
{ 148: }
  48,
{ 149: }
  30,
  48,
{ 150: }
  48,
{ 151: }
  48,
{ 152: }
{ 153: }
{ 154: }
{ 155: }
  51,
{ 156: }
{ 157: }
  51,
{ 158: }
  48,
{ 159: }
  38,
  48,
{ 160: }
{ 161: }
{ 162: }
{ 163: }
{ 164: }
{ 165: }
{ 166: }
{ 167: }
{ 168: }
{ 169: }
{ 170: }
  2,
  48,
{ 171: }
  48,
{ 172: }
  3,
  48,
{ 173: }
  48,
{ 174: }
  48,
{ 175: }
  5,
  48,
{ 176: }
  48,
{ 177: }
  48,
{ 178: }
  12,
  48,
{ 179: }
  32,
  48,
{ 180: }
  48,
{ 181: }
  48,
{ 182: }
  48,
{ 183: }
  48,
{ 184: }
  33,
  48,
{ 185: }
  48,
{ 186: }
  48,
{ 187: }
{ 188: }
{ 189: }
{ 190: }
  48,
{ 191: }
  48,
{ 192: }
  6,
  48,
{ 193: }
  7,
  48,
{ 194: }
  48,
{ 195: }
  13,
  48,
{ 196: }
  36,
  48,
{ 197: }
  29,
  48,
{ 198: }
  48,
{ 199: }
  48,
{ 200: }
  1,
  48,
{ 201: }
  48,
{ 202: }
  48,
{ 203: }
  48,
{ 204: }
  48,
{ 205: }
  34,
  48,
{ 206: }
  35,
  48,
{ 207: }
  4,
  48,
{ 208: }
  8,
  48,
{ 209: }
  37,
  48
);

yyt : array [1..yyntrans] of YYTrec = (
{ 0: }
{ 1: }
{ 2: }
  ( cc: [ #1..#8,#11..#31,'!','#','%'..'''','?','@',
            '['..'^','`','{'..#193,#245..#255 ]; s: 52),
  ( cc: [ #9,' ' ]; s: 38),
  ( cc: [ #10 ]; s: 39),
  ( cc: [ '"' ]; s: 19),
  ( cc: [ '$' ]; s: 51),
  ( cc: [ '(' ]; s: 18),
  ( cc: [ ')' ]; s: 34),
  ( cc: [ '*' ]; s: 24),
  ( cc: [ '+' ]; s: 25),
  ( cc: [ ',' ]; s: 37),
  ( cc: [ '-' ]; s: 26),
  ( cc: [ '.' ]; s: 36),
  ( cc: [ '/' ]; s: 17),
  ( cc: [ '0'..'9' ]; s: 50),
  ( cc: [ ':' ]; s: 33),
  ( cc: [ ';' ]; s: 35),
  ( cc: [ '<' ]; s: 28),
  ( cc: [ '=' ]; s: 27),
  ( cc: [ '>' ]; s: 29),
  ( cc: [ 'A'..'Z','h','j'..'l','p'..'r','u','v','x'..'z' ]; s: 40),
  ( cc: [ '_' ]; s: 49),
  ( cc: [ 'a' ]; s: 23),
  ( cc: [ 'b' ]; s: 30),
  ( cc: [ 'c' ]; s: 15),
  ( cc: [ 'd' ]; s: 10),
  ( cc: [ 'e' ]; s: 31),
  ( cc: [ 'f' ]; s: 21),
  ( cc: [ 'g' ]; s: 14),
  ( cc: [ 'i' ]; s: 11),
  ( cc: [ 'm' ]; s: 16),
  ( cc: [ 'n' ]; s: 12),
  ( cc: [ 'o' ]; s: 22),
  ( cc: [ 's' ]; s: 32),
  ( cc: [ 't' ]; s: 20),
  ( cc: [ 'w' ]; s: 13),
  ( cc: [ #194..#223 ]; s: 41),
  ( cc: [ #224 ]; s: 42),
  ( cc: [ #225..#236 ]; s: 43),
  ( cc: [ #237 ]; s: 44),
  ( cc: [ #238,#239 ]; s: 45),
  ( cc: [ #240 ]; s: 46),
  ( cc: [ #241..#243 ]; s: 47),
  ( cc: [ #244 ]; s: 48),
{ 3: }
  ( cc: [ #1..#8,#11..#31,'!','#','%'..'''','?','@',
            '['..'^','`','{'..#193,#245..#255 ]; s: 52),
  ( cc: [ #9,' ' ]; s: 38),
  ( cc: [ #10 ]; s: 39),
  ( cc: [ '"' ]; s: 19),
  ( cc: [ '$' ]; s: 51),
  ( cc: [ '(' ]; s: 18),
  ( cc: [ ')' ]; s: 34),
  ( cc: [ '*' ]; s: 24),
  ( cc: [ '+' ]; s: 25),
  ( cc: [ ',' ]; s: 37),
  ( cc: [ '-' ]; s: 26),
  ( cc: [ '.' ]; s: 36),
  ( cc: [ '/' ]; s: 17),
  ( cc: [ '0'..'9' ]; s: 50),
  ( cc: [ ':' ]; s: 33),
  ( cc: [ ';' ]; s: 35),
  ( cc: [ '<' ]; s: 28),
  ( cc: [ '=' ]; s: 27),
  ( cc: [ '>' ]; s: 29),
  ( cc: [ 'A'..'Z','h','j'..'l','p'..'r','u','v','x'..'z' ]; s: 40),
  ( cc: [ '_' ]; s: 49),
  ( cc: [ 'a' ]; s: 23),
  ( cc: [ 'b' ]; s: 30),
  ( cc: [ 'c' ]; s: 15),
  ( cc: [ 'd' ]; s: 10),
  ( cc: [ 'e' ]; s: 31),
  ( cc: [ 'f' ]; s: 21),
  ( cc: [ 'g' ]; s: 14),
  ( cc: [ 'i' ]; s: 11),
  ( cc: [ 'm' ]; s: 16),
  ( cc: [ 'n' ]; s: 12),
  ( cc: [ 'o' ]; s: 22),
  ( cc: [ 's' ]; s: 32),
  ( cc: [ 't' ]; s: 20),
  ( cc: [ 'w' ]; s: 13),
  ( cc: [ #194..#223 ]; s: 41),
  ( cc: [ #224 ]; s: 42),
  ( cc: [ #225..#236 ]; s: 43),
  ( cc: [ #237 ]; s: 44),
  ( cc: [ #238,#239 ]; s: 45),
  ( cc: [ #240 ]; s: 46),
  ( cc: [ #241..#243 ]; s: 47),
  ( cc: [ #244 ]; s: 48),
{ 4: }
  ( cc: [ #1..#9,#11..#255 ]; s: 54),
  ( cc: [ #10 ]; s: 53),
{ 5: }
  ( cc: [ #1..#9,#11..#255 ]; s: 54),
  ( cc: [ #10 ]; s: 53),
{ 6: }
  ( cc: [ #1..#9,#11..'''',')','+'..#255 ]; s: 57),
  ( cc: [ '(' ]; s: 55),
  ( cc: [ '*' ]; s: 56),
{ 7: }
  ( cc: [ #1..#9,#11..'''',')','+'..#255 ]; s: 57),
  ( cc: [ '(' ]; s: 55),
  ( cc: [ '*' ]; s: 56),
{ 8: }
  ( cc: [ #1..#9,#11..'!','#'..#255 ]; s: 60),
  ( cc: [ #10 ]; s: 59),
  ( cc: [ '"' ]; s: 58),
{ 9: }
  ( cc: [ #1..#9,#11..'!','#'..#255 ]; s: 60),
  ( cc: [ #10 ]; s: 59),
  ( cc: [ '"' ]; s: 58),
{ 10: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','b'..'d','f'..'h','j'..'z' ]; s: 64),
  ( cc: [ 'a' ]; s: 63),
  ( cc: [ 'e' ]; s: 61),
  ( cc: [ 'i' ]; s: 62),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 11: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'e','g'..'m','o'..'z' ]; s: 64),
  ( cc: [ 'f' ]; s: 75),
  ( cc: [ 'n' ]; s: 74),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 12: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'n','p'..'z' ]; s: 64),
  ( cc: [ 'o' ]; s: 76),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 13: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','b'..'q','s'..'z' ]; s: 64),
  ( cc: [ 'a' ]; s: 77),
  ( cc: [ 'r' ]; s: 78),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 14: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'n','p'..'z' ]; s: 64),
  ( cc: [ 'o' ]; s: 79),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 15: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'k','m'..'z' ]; s: 64),
  ( cc: [ 'l' ]; s: 80),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 16: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'h','j'..'n','p'..'z' ]; s: 64),
  ( cc: [ 'i' ]; s: 81),
  ( cc: [ 'o' ]; s: 82),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 17: }
  ( cc: [ '/' ]; s: 83),
{ 18: }
  ( cc: [ '*' ]; s: 84),
{ 19: }
{ 20: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'g','i'..'q','s'..'z' ]; s: 64),
  ( cc: [ 'h' ]; s: 86),
  ( cc: [ 'r' ]; s: 85),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 21: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','b'..'k','m'..'z' ]; s: 64),
  ( cc: [ 'a' ]; s: 87),
  ( cc: [ 'l' ]; s: 88),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 22: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'q','s'..'z' ]; s: 64),
  ( cc: [ 'r' ]; s: 89),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 23: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'m','o'..'z' ]; s: 64),
  ( cc: [ 'n' ]; s: 90),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 24: }
{ 25: }
{ 26: }
{ 27: }
{ 28: }
  ( cc: [ '=' ]; s: 92),
  ( cc: [ '>' ]; s: 91),
{ 29: }
  ( cc: [ '=' ]; s: 93),
{ 30: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'d','f'..'n','p'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 94),
  ( cc: [ 'o' ]; s: 95),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 31: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'k','m','o'..'z' ]; s: 64),
  ( cc: [ 'l' ]; s: 97),
  ( cc: [ 'n' ]; s: 96),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 32: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 98),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 33: }
  ( cc: [ '=' ]; s: 99),
{ 34: }
{ 35: }
{ 36: }
{ 37: }
{ 38: }
  ( cc: [ #9,' ' ]; s: 100),
{ 39: }
{ 40: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'z' ]; s: 64),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 41: }
  ( cc: [ #128..#191 ]; s: 64),
{ 42: }
  ( cc: [ #160..#191 ]; s: 101),
{ 43: }
  ( cc: [ #128..#191 ]; s: 102),
{ 44: }
  ( cc: [ #128..#159 ]; s: 103),
{ 45: }
  ( cc: [ #128..#191 ]; s: 104),
{ 46: }
  ( cc: [ #144..#191 ]; s: 105),
{ 47: }
  ( cc: [ #128..#191 ]; s: 106),
{ 48: }
  ( cc: [ #128..#143 ]; s: 107),
{ 49: }
  ( cc: [ 'N','n' ]; s: 108),
{ 50: }
  ( cc: [ ',','.' ]; s: 110),
  ( cc: [ '0'..'9' ]; s: 109),
  ( cc: [ 'E','e' ]; s: 111),
{ 51: }
  ( cc: [ '0'..'9','A'..'F','a'..'f' ]; s: 112),
{ 52: }
{ 53: }
{ 54: }
{ 55: }
  ( cc: [ '*' ]; s: 113),
{ 56: }
  ( cc: [ ')' ]; s: 114),
{ 57: }
{ 58: }
{ 59: }
{ 60: }
  ( cc: [ #1..#9,#11..'!','#'..#255 ]; s: 60),
{ 61: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'e','g'..'z' ]; s: 64),
  ( cc: [ 'f' ]; s: 115),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 62: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'u','w'..'z' ]; s: 64),
  ( cc: [ 'v' ]; s: 116),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 63: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 117),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 64: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'z' ]; s: 64),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 65: }
  ( cc: [ #128..#191 ]; s: 64),
{ 66: }
  ( cc: [ #160..#191 ]; s: 118),
{ 67: }
  ( cc: [ #128..#191 ]; s: 119),
{ 68: }
  ( cc: [ #128..#159 ]; s: 120),
{ 69: }
  ( cc: [ #128..#191 ]; s: 121),
{ 70: }
  ( cc: [ #144..#191 ]; s: 122),
{ 71: }
  ( cc: [ #128..#191 ]; s: 123),
{ 72: }
  ( cc: [ #128..#143 ]; s: 124),
{ 73: }
  ( cc: [ '0'..'9','A'..'Z','a'..'z' ]; s: 73),
  ( cc: [ #194..#223 ]; s: 125),
  ( cc: [ #224 ]; s: 126),
  ( cc: [ #225..#236 ]; s: 127),
  ( cc: [ #237 ]; s: 128),
  ( cc: [ #238,#239 ]; s: 129),
  ( cc: [ #240 ]; s: 130),
  ( cc: [ #241..#243 ]; s: 131),
  ( cc: [ #244 ]; s: 132),
{ 74: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'e','g'..'s','u'..'z' ]; s: 64),
  ( cc: [ 'f' ]; s: 133),
  ( cc: [ 't' ]; s: 134),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 75: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'z' ]; s: 64),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 76: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 135),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 77: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'q','s'..'z' ]; s: 64),
  ( cc: [ 'r' ]; s: 136),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 78: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'h','j'..'z' ]; s: 64),
  ( cc: [ 'i' ]; s: 137),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 79: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 138),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 80: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 139),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 81: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'r','t'..'z' ]; s: 64),
  ( cc: [ 's' ]; s: 140),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 82: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'c','e'..'z' ]; s: 64),
  ( cc: [ 'd' ]; s: 141),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 83: }
{ 84: }
{ 85: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'t','v'..'z' ]; s: 64),
  ( cc: [ 'u' ]; s: 142),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 86: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 143),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 87: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'k','m'..'z' ]; s: 64),
  ( cc: [ 'l' ]; s: 144),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 88: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'n','p'..'z' ]; s: 64),
  ( cc: [ 'o' ]; s: 145),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 89: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'z' ]; s: 64),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 90: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'c','e'..'z' ]; s: 64),
  ( cc: [ 'd' ]; s: 146),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 91: }
{ 92: }
{ 93: }
{ 94: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'f','h'..'z' ]; s: 64),
  ( cc: [ 'g' ]; s: 147),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 95: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'n','p'..'z' ]; s: 64),
  ( cc: [ 'o' ]; s: 148),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 96: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'c','e'..'z' ]; s: 64),
  ( cc: [ 'd' ]; s: 149),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 97: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'r','t'..'z' ]; s: 64),
  ( cc: [ 's' ]; s: 150),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 98: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'q','s'..'z' ]; s: 64),
  ( cc: [ 'r' ]; s: 151),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 99: }
{ 100: }
  ( cc: [ #9,' ' ]; s: 100),
{ 101: }
  ( cc: [ #128..#191 ]; s: 64),
{ 102: }
  ( cc: [ #128..#191 ]; s: 64),
{ 103: }
  ( cc: [ #128..#191 ]; s: 64),
{ 104: }
  ( cc: [ #128..#191 ]; s: 64),
{ 105: }
  ( cc: [ #128..#191 ]; s: 152),
{ 106: }
  ( cc: [ #128..#191 ]; s: 153),
{ 107: }
  ( cc: [ #128..#191 ]; s: 154),
{ 108: }
{ 109: }
  ( cc: [ ',','.' ]; s: 110),
  ( cc: [ '0'..'9' ]; s: 109),
  ( cc: [ 'E','e' ]; s: 111),
{ 110: }
  ( cc: [ '0'..'9' ]; s: 155),
{ 111: }
  ( cc: [ '+','-' ]; s: 156),
  ( cc: [ '0'..'9' ]; s: 157),
{ 112: }
  ( cc: [ '0'..'9','A'..'F','a'..'f' ]; s: 112),
{ 113: }
{ 114: }
{ 115: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'h','j'..'z' ]; s: 64),
  ( cc: [ 'i' ]; s: 158),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 116: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'z' ]; s: 64),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 117: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 159),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 118: }
  ( cc: [ #128..#191 ]; s: 64),
{ 119: }
  ( cc: [ #128..#191 ]; s: 64),
{ 120: }
  ( cc: [ #128..#191 ]; s: 64),
{ 121: }
  ( cc: [ #128..#191 ]; s: 64),
{ 122: }
  ( cc: [ #128..#191 ]; s: 160),
{ 123: }
  ( cc: [ #128..#191 ]; s: 161),
{ 124: }
  ( cc: [ #128..#191 ]; s: 162),
{ 125: }
  ( cc: [ #128..#191 ]; s: 73),
{ 126: }
  ( cc: [ #160..#191 ]; s: 163),
{ 127: }
  ( cc: [ #128..#191 ]; s: 164),
{ 128: }
  ( cc: [ #128..#159 ]; s: 165),
{ 129: }
  ( cc: [ #128..#191 ]; s: 166),
{ 130: }
  ( cc: [ #144..#191 ]; s: 167),
{ 131: }
  ( cc: [ #128..#191 ]; s: 168),
{ 132: }
  ( cc: [ #128..#143 ]; s: 169),
{ 133: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'n','p'..'z' ]; s: 64),
  ( cc: [ 'o' ]; s: 170),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 134: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 171),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 135: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 172),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 136: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'m','o'..'z' ]; s: 64),
  ( cc: [ 'n' ]; s: 173),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 137: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 174),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 138: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'n','p'..'z' ]; s: 64),
  ( cc: [ 'o' ]; s: 175),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 139: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','b'..'z' ]; s: 64),
  ( cc: [ 'a' ]; s: 176),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 140: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'r','t'..'z' ]; s: 64),
  ( cc: [ 's' ]; s: 177),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 141: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'z' ]; s: 64),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 142: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 178),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 143: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'m','o'..'z' ]; s: 64),
  ( cc: [ 'n' ]; s: 179),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 144: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'r','t'..'z' ]; s: 64),
  ( cc: [ 's' ]; s: 180),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 145: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','b'..'z' ]; s: 64),
  ( cc: [ 'a' ]; s: 181),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 146: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'z' ]; s: 64),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 147: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'h','j'..'z' ]; s: 64),
  ( cc: [ 'i' ]; s: 182),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 148: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'k','m'..'z' ]; s: 64),
  ( cc: [ 'l' ]; s: 183),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 149: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'z' ]; s: 64),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 150: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 184),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 151: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'h','j'..'z' ]; s: 64),
  ( cc: [ 'i' ]; s: 185),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 152: }
  ( cc: [ #128..#191 ]; s: 64),
{ 153: }
  ( cc: [ #128..#191 ]; s: 64),
{ 154: }
  ( cc: [ #128..#191 ]; s: 64),
{ 155: }
  ( cc: [ '0'..'9' ]; s: 155),
  ( cc: [ 'E','e' ]; s: 111),
{ 156: }
  ( cc: [ '0'..'9' ]; s: 157),
{ 157: }
  ( cc: [ '0'..'9' ]; s: 157),
{ 158: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'m','o'..'z' ]; s: 64),
  ( cc: [ 'n' ]; s: 186),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 159: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'z' ]; s: 64),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 160: }
  ( cc: [ #128..#191 ]; s: 64),
{ 161: }
  ( cc: [ #128..#191 ]; s: 64),
{ 162: }
  ( cc: [ #128..#191 ]; s: 64),
{ 163: }
  ( cc: [ #128..#191 ]; s: 73),
{ 164: }
  ( cc: [ #128..#191 ]; s: 73),
{ 165: }
  ( cc: [ #128..#191 ]; s: 73),
{ 166: }
  ( cc: [ #128..#191 ]; s: 73),
{ 167: }
  ( cc: [ #128..#191 ]; s: 187),
{ 168: }
  ( cc: [ #128..#191 ]; s: 188),
{ 169: }
  ( cc: [ #128..#191 ]; s: 189),
{ 170: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'z' ]; s: 64),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 171: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'f','h'..'z' ]; s: 64),
  ( cc: [ 'g' ]; s: 190),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 172: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'z' ]; s: 64),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 173: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'h','j'..'z' ]; s: 64),
  ( cc: [ 'i' ]; s: 191),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 174: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 192),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 175: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'z' ]; s: 64),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 176: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'q','s'..'z' ]; s: 64),
  ( cc: [ 'r' ]; s: 193),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 177: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'h','j'..'z' ]; s: 64),
  ( cc: [ 'i' ]; s: 194),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 178: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'z' ]; s: 64),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 179: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'z' ]; s: 64),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 180: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 195),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 181: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'s','u'..'z' ]; s: 64),
  ( cc: [ 't' ]; s: 196),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 182: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'m','o'..'z' ]; s: 64),
  ( cc: [ 'n' ]; s: 197),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 183: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 198),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 184: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'z' ]; s: 64),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 185: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'m','o'..'z' ]; s: 64),
  ( cc: [ 'n' ]; s: 199),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 186: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 200),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 187: }
  ( cc: [ #128..#191 ]; s: 73),
{ 188: }
  ( cc: [ #128..#191 ]; s: 73),
{ 189: }
  ( cc: [ #128..#191 ]; s: 73),
{ 190: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'d','f'..'z' ]; s: 64),
  ( cc: [ 'e' ]; s: 201),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 191: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'m','o'..'z' ]; s: 64),
  ( cc: [ 'n' ]; s: 202),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 192: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'z' ]; s: 64),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 193: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'z' ]; s: 64),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 194: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'m','o'..'z' ]; s: 64),
  ( cc: [ 'n' ]; s: 203),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 195: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'z' ]; s: 64),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 196: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'z' ]; s: 64),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 197: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'z' ]; s: 64),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 198: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','b'..'z' ]; s: 64),
  ( cc: [ 'a' ]; s: 204),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 199: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'f','h'..'z' ]; s: 64),
  ( cc: [ 'g' ]; s: 205),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 200: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'z' ]; s: 64),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 201: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'q','s'..'z' ]; s: 64),
  ( cc: [ 'r' ]; s: 206),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 202: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'f','h'..'z' ]; s: 64),
  ( cc: [ 'g' ]; s: 207),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 203: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'f','h'..'z' ]; s: 64),
  ( cc: [ 'g' ]; s: 208),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 204: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'m','o'..'z' ]; s: 64),
  ( cc: [ 'n' ]; s: 209),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 205: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'z' ]; s: 64),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 206: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'z' ]; s: 64),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 207: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'z' ]; s: 64),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 208: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'z' ]; s: 64),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72),
{ 209: }
  ( cc: [ '0'..'9' ]; s: 73),
  ( cc: [ 'A'..'Z','a'..'z' ]; s: 64),
  ( cc: [ #194..#223 ]; s: 65),
  ( cc: [ #224 ]; s: 66),
  ( cc: [ #225..#236 ]; s: 67),
  ( cc: [ #237 ]; s: 68),
  ( cc: [ #238,#239 ]; s: 69),
  ( cc: [ #240 ]; s: 70),
  ( cc: [ #241..#243 ]; s: 71),
  ( cc: [ #244 ]; s: 72)
);

yykl : array [0..yynstates-1] of Integer = (
{ 0: } 1,
{ 1: } 1,
{ 2: } 1,
{ 3: } 1,
{ 4: } 1,
{ 5: } 1,
{ 6: } 1,
{ 7: } 1,
{ 8: } 1,
{ 9: } 2,
{ 10: } 3,
{ 11: } 5,
{ 12: } 7,
{ 13: } 9,
{ 14: } 11,
{ 15: } 13,
{ 16: } 15,
{ 17: } 17,
{ 18: } 19,
{ 19: } 21,
{ 20: } 23,
{ 21: } 25,
{ 22: } 27,
{ 23: } 29,
{ 24: } 31,
{ 25: } 33,
{ 26: } 35,
{ 27: } 37,
{ 28: } 39,
{ 29: } 41,
{ 30: } 43,
{ 31: } 45,
{ 32: } 47,
{ 33: } 49,
{ 34: } 51,
{ 35: } 53,
{ 36: } 55,
{ 37: } 57,
{ 38: } 59,
{ 39: } 61,
{ 40: } 62,
{ 41: } 64,
{ 42: } 65,
{ 43: } 66,
{ 44: } 67,
{ 45: } 68,
{ 46: } 69,
{ 47: } 70,
{ 48: } 71,
{ 49: } 72,
{ 50: } 73,
{ 51: } 76,
{ 52: } 77,
{ 53: } 78,
{ 54: } 79,
{ 55: } 80,
{ 56: } 81,
{ 57: } 82,
{ 58: } 83,
{ 59: } 84,
{ 60: } 85,
{ 61: } 86,
{ 62: } 87,
{ 63: } 88,
{ 64: } 89,
{ 65: } 90,
{ 66: } 90,
{ 67: } 90,
{ 68: } 90,
{ 69: } 90,
{ 70: } 90,
{ 71: } 90,
{ 72: } 90,
{ 73: } 90,
{ 74: } 91,
{ 75: } 92,
{ 76: } 94,
{ 77: } 95,
{ 78: } 96,
{ 79: } 97,
{ 80: } 98,
{ 81: } 99,
{ 82: } 100,
{ 83: } 101,
{ 84: } 102,
{ 85: } 103,
{ 86: } 104,
{ 87: } 105,
{ 88: } 106,
{ 89: } 107,
{ 90: } 109,
{ 91: } 110,
{ 92: } 111,
{ 93: } 112,
{ 94: } 113,
{ 95: } 114,
{ 96: } 115,
{ 97: } 116,
{ 98: } 117,
{ 99: } 118,
{ 100: } 119,
{ 101: } 120,
{ 102: } 120,
{ 103: } 120,
{ 104: } 120,
{ 105: } 120,
{ 106: } 120,
{ 107: } 120,
{ 108: } 120,
{ 109: } 121,
{ 110: } 123,
{ 111: } 123,
{ 112: } 123,
{ 113: } 124,
{ 114: } 125,
{ 115: } 126,
{ 116: } 127,
{ 117: } 129,
{ 118: } 130,
{ 119: } 130,
{ 120: } 130,
{ 121: } 130,
{ 122: } 130,
{ 123: } 130,
{ 124: } 130,
{ 125: } 130,
{ 126: } 130,
{ 127: } 130,
{ 128: } 130,
{ 129: } 130,
{ 130: } 130,
{ 131: } 130,
{ 132: } 130,
{ 133: } 130,
{ 134: } 131,
{ 135: } 132,
{ 136: } 134,
{ 137: } 135,
{ 138: } 136,
{ 139: } 137,
{ 140: } 138,
{ 141: } 139,
{ 142: } 141,
{ 143: } 142,
{ 144: } 143,
{ 145: } 144,
{ 146: } 145,
{ 147: } 147,
{ 148: } 148,
{ 149: } 149,
{ 150: } 151,
{ 151: } 152,
{ 152: } 153,
{ 153: } 153,
{ 154: } 153,
{ 155: } 153,
{ 156: } 154,
{ 157: } 154,
{ 158: } 155,
{ 159: } 156,
{ 160: } 158,
{ 161: } 158,
{ 162: } 158,
{ 163: } 158,
{ 164: } 158,
{ 165: } 158,
{ 166: } 158,
{ 167: } 158,
{ 168: } 158,
{ 169: } 158,
{ 170: } 158,
{ 171: } 160,
{ 172: } 161,
{ 173: } 163,
{ 174: } 164,
{ 175: } 165,
{ 176: } 167,
{ 177: } 168,
{ 178: } 169,
{ 179: } 171,
{ 180: } 173,
{ 181: } 174,
{ 182: } 175,
{ 183: } 176,
{ 184: } 177,
{ 185: } 179,
{ 186: } 180,
{ 187: } 181,
{ 188: } 181,
{ 189: } 181,
{ 190: } 181,
{ 191: } 182,
{ 192: } 183,
{ 193: } 185,
{ 194: } 187,
{ 195: } 188,
{ 196: } 190,
{ 197: } 192,
{ 198: } 194,
{ 199: } 195,
{ 200: } 196,
{ 201: } 198,
{ 202: } 199,
{ 203: } 200,
{ 204: } 201,
{ 205: } 202,
{ 206: } 204,
{ 207: } 206,
{ 208: } 208,
{ 209: } 210
);

yykh : array [0..yynstates-1] of Integer = (
{ 0: } 0,
{ 1: } 0,
{ 2: } 0,
{ 3: } 0,
{ 4: } 0,
{ 5: } 0,
{ 6: } 0,
{ 7: } 0,
{ 8: } 1,
{ 9: } 2,
{ 10: } 4,
{ 11: } 6,
{ 12: } 8,
{ 13: } 10,
{ 14: } 12,
{ 15: } 14,
{ 16: } 16,
{ 17: } 18,
{ 18: } 20,
{ 19: } 22,
{ 20: } 24,
{ 21: } 26,
{ 22: } 28,
{ 23: } 30,
{ 24: } 32,
{ 25: } 34,
{ 26: } 36,
{ 27: } 38,
{ 28: } 40,
{ 29: } 42,
{ 30: } 44,
{ 31: } 46,
{ 32: } 48,
{ 33: } 50,
{ 34: } 52,
{ 35: } 54,
{ 36: } 56,
{ 37: } 58,
{ 38: } 60,
{ 39: } 61,
{ 40: } 63,
{ 41: } 64,
{ 42: } 65,
{ 43: } 66,
{ 44: } 67,
{ 45: } 68,
{ 46: } 69,
{ 47: } 70,
{ 48: } 71,
{ 49: } 72,
{ 50: } 75,
{ 51: } 76,
{ 52: } 77,
{ 53: } 78,
{ 54: } 79,
{ 55: } 80,
{ 56: } 81,
{ 57: } 82,
{ 58: } 83,
{ 59: } 84,
{ 60: } 85,
{ 61: } 86,
{ 62: } 87,
{ 63: } 88,
{ 64: } 89,
{ 65: } 89,
{ 66: } 89,
{ 67: } 89,
{ 68: } 89,
{ 69: } 89,
{ 70: } 89,
{ 71: } 89,
{ 72: } 89,
{ 73: } 90,
{ 74: } 91,
{ 75: } 93,
{ 76: } 94,
{ 77: } 95,
{ 78: } 96,
{ 79: } 97,
{ 80: } 98,
{ 81: } 99,
{ 82: } 100,
{ 83: } 101,
{ 84: } 102,
{ 85: } 103,
{ 86: } 104,
{ 87: } 105,
{ 88: } 106,
{ 89: } 108,
{ 90: } 109,
{ 91: } 110,
{ 92: } 111,
{ 93: } 112,
{ 94: } 113,
{ 95: } 114,
{ 96: } 115,
{ 97: } 116,
{ 98: } 117,
{ 99: } 118,
{ 100: } 119,
{ 101: } 119,
{ 102: } 119,
{ 103: } 119,
{ 104: } 119,
{ 105: } 119,
{ 106: } 119,
{ 107: } 119,
{ 108: } 120,
{ 109: } 122,
{ 110: } 122,
{ 111: } 122,
{ 112: } 123,
{ 113: } 124,
{ 114: } 125,
{ 115: } 126,
{ 116: } 128,
{ 117: } 129,
{ 118: } 129,
{ 119: } 129,
{ 120: } 129,
{ 121: } 129,
{ 122: } 129,
{ 123: } 129,
{ 124: } 129,
{ 125: } 129,
{ 126: } 129,
{ 127: } 129,
{ 128: } 129,
{ 129: } 129,
{ 130: } 129,
{ 131: } 129,
{ 132: } 129,
{ 133: } 130,
{ 134: } 131,
{ 135: } 133,
{ 136: } 134,
{ 137: } 135,
{ 138: } 136,
{ 139: } 137,
{ 140: } 138,
{ 141: } 140,
{ 142: } 141,
{ 143: } 142,
{ 144: } 143,
{ 145: } 144,
{ 146: } 146,
{ 147: } 147,
{ 148: } 148,
{ 149: } 150,
{ 150: } 151,
{ 151: } 152,
{ 152: } 152,
{ 153: } 152,
{ 154: } 152,
{ 155: } 153,
{ 156: } 153,
{ 157: } 154,
{ 158: } 155,
{ 159: } 157,
{ 160: } 157,
{ 161: } 157,
{ 162: } 157,
{ 163: } 157,
{ 164: } 157,
{ 165: } 157,
{ 166: } 157,
{ 167: } 157,
{ 168: } 157,
{ 169: } 157,
{ 170: } 159,
{ 171: } 160,
{ 172: } 162,
{ 173: } 163,
{ 174: } 164,
{ 175: } 166,
{ 176: } 167,
{ 177: } 168,
{ 178: } 170,
{ 179: } 172,
{ 180: } 173,
{ 181: } 174,
{ 182: } 175,
{ 183: } 176,
{ 184: } 178,
{ 185: } 179,
{ 186: } 180,
{ 187: } 180,
{ 188: } 180,
{ 189: } 180,
{ 190: } 181,
{ 191: } 182,
{ 192: } 184,
{ 193: } 186,
{ 194: } 187,
{ 195: } 189,
{ 196: } 191,
{ 197: } 193,
{ 198: } 194,
{ 199: } 195,
{ 200: } 197,
{ 201: } 198,
{ 202: } 199,
{ 203: } 200,
{ 204: } 201,
{ 205: } 203,
{ 206: } 205,
{ 207: } 207,
{ 208: } 209,
{ 209: } 211
);

yyml : array [0..yynstates-1] of Integer = (
{ 0: } 1,
{ 1: } 1,
{ 2: } 1,
{ 3: } 1,
{ 4: } 1,
{ 5: } 1,
{ 6: } 1,
{ 7: } 1,
{ 8: } 1,
{ 9: } 2,
{ 10: } 3,
{ 11: } 5,
{ 12: } 7,
{ 13: } 9,
{ 14: } 11,
{ 15: } 13,
{ 16: } 15,
{ 17: } 17,
{ 18: } 19,
{ 19: } 21,
{ 20: } 23,
{ 21: } 25,
{ 22: } 27,
{ 23: } 29,
{ 24: } 31,
{ 25: } 33,
{ 26: } 35,
{ 27: } 37,
{ 28: } 39,
{ 29: } 41,
{ 30: } 43,
{ 31: } 45,
{ 32: } 47,
{ 33: } 49,
{ 34: } 51,
{ 35: } 53,
{ 36: } 55,
{ 37: } 57,
{ 38: } 59,
{ 39: } 61,
{ 40: } 62,
{ 41: } 64,
{ 42: } 65,
{ 43: } 66,
{ 44: } 67,
{ 45: } 68,
{ 46: } 69,
{ 47: } 70,
{ 48: } 71,
{ 49: } 72,
{ 50: } 73,
{ 51: } 76,
{ 52: } 77,
{ 53: } 78,
{ 54: } 79,
{ 55: } 80,
{ 56: } 81,
{ 57: } 82,
{ 58: } 83,
{ 59: } 84,
{ 60: } 85,
{ 61: } 86,
{ 62: } 87,
{ 63: } 88,
{ 64: } 89,
{ 65: } 90,
{ 66: } 90,
{ 67: } 90,
{ 68: } 90,
{ 69: } 90,
{ 70: } 90,
{ 71: } 90,
{ 72: } 90,
{ 73: } 90,
{ 74: } 91,
{ 75: } 92,
{ 76: } 94,
{ 77: } 95,
{ 78: } 96,
{ 79: } 97,
{ 80: } 98,
{ 81: } 99,
{ 82: } 100,
{ 83: } 101,
{ 84: } 102,
{ 85: } 103,
{ 86: } 104,
{ 87: } 105,
{ 88: } 106,
{ 89: } 107,
{ 90: } 109,
{ 91: } 110,
{ 92: } 111,
{ 93: } 112,
{ 94: } 113,
{ 95: } 114,
{ 96: } 115,
{ 97: } 116,
{ 98: } 117,
{ 99: } 118,
{ 100: } 119,
{ 101: } 120,
{ 102: } 120,
{ 103: } 120,
{ 104: } 120,
{ 105: } 120,
{ 106: } 120,
{ 107: } 120,
{ 108: } 120,
{ 109: } 121,
{ 110: } 123,
{ 111: } 123,
{ 112: } 123,
{ 113: } 124,
{ 114: } 125,
{ 115: } 126,
{ 116: } 127,
{ 117: } 129,
{ 118: } 130,
{ 119: } 130,
{ 120: } 130,
{ 121: } 130,
{ 122: } 130,
{ 123: } 130,
{ 124: } 130,
{ 125: } 130,
{ 126: } 130,
{ 127: } 130,
{ 128: } 130,
{ 129: } 130,
{ 130: } 130,
{ 131: } 130,
{ 132: } 130,
{ 133: } 130,
{ 134: } 131,
{ 135: } 132,
{ 136: } 134,
{ 137: } 135,
{ 138: } 136,
{ 139: } 137,
{ 140: } 138,
{ 141: } 139,
{ 142: } 141,
{ 143: } 142,
{ 144: } 143,
{ 145: } 144,
{ 146: } 145,
{ 147: } 147,
{ 148: } 148,
{ 149: } 149,
{ 150: } 151,
{ 151: } 152,
{ 152: } 153,
{ 153: } 153,
{ 154: } 153,
{ 155: } 153,
{ 156: } 154,
{ 157: } 154,
{ 158: } 155,
{ 159: } 156,
{ 160: } 158,
{ 161: } 158,
{ 162: } 158,
{ 163: } 158,
{ 164: } 158,
{ 165: } 158,
{ 166: } 158,
{ 167: } 158,
{ 168: } 158,
{ 169: } 158,
{ 170: } 158,
{ 171: } 160,
{ 172: } 161,
{ 173: } 163,
{ 174: } 164,
{ 175: } 165,
{ 176: } 167,
{ 177: } 168,
{ 178: } 169,
{ 179: } 171,
{ 180: } 173,
{ 181: } 174,
{ 182: } 175,
{ 183: } 176,
{ 184: } 177,
{ 185: } 179,
{ 186: } 180,
{ 187: } 181,
{ 188: } 181,
{ 189: } 181,
{ 190: } 181,
{ 191: } 182,
{ 192: } 183,
{ 193: } 185,
{ 194: } 187,
{ 195: } 188,
{ 196: } 190,
{ 197: } 192,
{ 198: } 194,
{ 199: } 195,
{ 200: } 196,
{ 201: } 198,
{ 202: } 199,
{ 203: } 200,
{ 204: } 201,
{ 205: } 202,
{ 206: } 204,
{ 207: } 206,
{ 208: } 208,
{ 209: } 210
);

yymh : array [0..yynstates-1] of Integer = (
{ 0: } 0,
{ 1: } 0,
{ 2: } 0,
{ 3: } 0,
{ 4: } 0,
{ 5: } 0,
{ 6: } 0,
{ 7: } 0,
{ 8: } 1,
{ 9: } 2,
{ 10: } 4,
{ 11: } 6,
{ 12: } 8,
{ 13: } 10,
{ 14: } 12,
{ 15: } 14,
{ 16: } 16,
{ 17: } 18,
{ 18: } 20,
{ 19: } 22,
{ 20: } 24,
{ 21: } 26,
{ 22: } 28,
{ 23: } 30,
{ 24: } 32,
{ 25: } 34,
{ 26: } 36,
{ 27: } 38,
{ 28: } 40,
{ 29: } 42,
{ 30: } 44,
{ 31: } 46,
{ 32: } 48,
{ 33: } 50,
{ 34: } 52,
{ 35: } 54,
{ 36: } 56,
{ 37: } 58,
{ 38: } 60,
{ 39: } 61,
{ 40: } 63,
{ 41: } 64,
{ 42: } 65,
{ 43: } 66,
{ 44: } 67,
{ 45: } 68,
{ 46: } 69,
{ 47: } 70,
{ 48: } 71,
{ 49: } 72,
{ 50: } 75,
{ 51: } 76,
{ 52: } 77,
{ 53: } 78,
{ 54: } 79,
{ 55: } 80,
{ 56: } 81,
{ 57: } 82,
{ 58: } 83,
{ 59: } 84,
{ 60: } 85,
{ 61: } 86,
{ 62: } 87,
{ 63: } 88,
{ 64: } 89,
{ 65: } 89,
{ 66: } 89,
{ 67: } 89,
{ 68: } 89,
{ 69: } 89,
{ 70: } 89,
{ 71: } 89,
{ 72: } 89,
{ 73: } 90,
{ 74: } 91,
{ 75: } 93,
{ 76: } 94,
{ 77: } 95,
{ 78: } 96,
{ 79: } 97,
{ 80: } 98,
{ 81: } 99,
{ 82: } 100,
{ 83: } 101,
{ 84: } 102,
{ 85: } 103,
{ 86: } 104,
{ 87: } 105,
{ 88: } 106,
{ 89: } 108,
{ 90: } 109,
{ 91: } 110,
{ 92: } 111,
{ 93: } 112,
{ 94: } 113,
{ 95: } 114,
{ 96: } 115,
{ 97: } 116,
{ 98: } 117,
{ 99: } 118,
{ 100: } 119,
{ 101: } 119,
{ 102: } 119,
{ 103: } 119,
{ 104: } 119,
{ 105: } 119,
{ 106: } 119,
{ 107: } 119,
{ 108: } 120,
{ 109: } 122,
{ 110: } 122,
{ 111: } 122,
{ 112: } 123,
{ 113: } 124,
{ 114: } 125,
{ 115: } 126,
{ 116: } 128,
{ 117: } 129,
{ 118: } 129,
{ 119: } 129,
{ 120: } 129,
{ 121: } 129,
{ 122: } 129,
{ 123: } 129,
{ 124: } 129,
{ 125: } 129,
{ 126: } 129,
{ 127: } 129,
{ 128: } 129,
{ 129: } 129,
{ 130: } 129,
{ 131: } 129,
{ 132: } 129,
{ 133: } 130,
{ 134: } 131,
{ 135: } 133,
{ 136: } 134,
{ 137: } 135,
{ 138: } 136,
{ 139: } 137,
{ 140: } 138,
{ 141: } 140,
{ 142: } 141,
{ 143: } 142,
{ 144: } 143,
{ 145: } 144,
{ 146: } 146,
{ 147: } 147,
{ 148: } 148,
{ 149: } 150,
{ 150: } 151,
{ 151: } 152,
{ 152: } 152,
{ 153: } 152,
{ 154: } 152,
{ 155: } 153,
{ 156: } 153,
{ 157: } 154,
{ 158: } 155,
{ 159: } 157,
{ 160: } 157,
{ 161: } 157,
{ 162: } 157,
{ 163: } 157,
{ 164: } 157,
{ 165: } 157,
{ 166: } 157,
{ 167: } 157,
{ 168: } 157,
{ 169: } 157,
{ 170: } 159,
{ 171: } 160,
{ 172: } 162,
{ 173: } 163,
{ 174: } 164,
{ 175: } 166,
{ 176: } 167,
{ 177: } 168,
{ 178: } 170,
{ 179: } 172,
{ 180: } 173,
{ 181: } 174,
{ 182: } 175,
{ 183: } 176,
{ 184: } 178,
{ 185: } 179,
{ 186: } 180,
{ 187: } 180,
{ 188: } 180,
{ 189: } 180,
{ 190: } 181,
{ 191: } 182,
{ 192: } 184,
{ 193: } 186,
{ 194: } 187,
{ 195: } 189,
{ 196: } 191,
{ 197: } 193,
{ 198: } 194,
{ 199: } 195,
{ 200: } 197,
{ 201: } 198,
{ 202: } 199,
{ 203: } 200,
{ 204: } 201,
{ 205: } 203,
{ 206: } 205,
{ 207: } 207,
{ 208: } 209,
{ 209: } 211
);

yytl : array [0..yynstates-1] of Integer = (
{ 0: } 1,
{ 1: } 1,
{ 2: } 1,
{ 3: } 44,
{ 4: } 87,
{ 5: } 89,
{ 6: } 91,
{ 7: } 94,
{ 8: } 97,
{ 9: } 100,
{ 10: } 103,
{ 11: } 116,
{ 12: } 128,
{ 13: } 139,
{ 14: } 151,
{ 15: } 162,
{ 16: } 173,
{ 17: } 185,
{ 18: } 186,
{ 19: } 187,
{ 20: } 187,
{ 21: } 199,
{ 22: } 211,
{ 23: } 222,
{ 24: } 233,
{ 25: } 233,
{ 26: } 233,
{ 27: } 233,
{ 28: } 233,
{ 29: } 235,
{ 30: } 236,
{ 31: } 248,
{ 32: } 260,
{ 33: } 271,
{ 34: } 272,
{ 35: } 272,
{ 36: } 272,
{ 37: } 272,
{ 38: } 272,
{ 39: } 273,
{ 40: } 273,
{ 41: } 283,
{ 42: } 284,
{ 43: } 285,
{ 44: } 286,
{ 45: } 287,
{ 46: } 288,
{ 47: } 289,
{ 48: } 290,
{ 49: } 291,
{ 50: } 292,
{ 51: } 295,
{ 52: } 296,
{ 53: } 296,
{ 54: } 296,
{ 55: } 296,
{ 56: } 297,
{ 57: } 298,
{ 58: } 298,
{ 59: } 298,
{ 60: } 298,
{ 61: } 299,
{ 62: } 310,
{ 63: } 321,
{ 64: } 332,
{ 65: } 342,
{ 66: } 343,
{ 67: } 344,
{ 68: } 345,
{ 69: } 346,
{ 70: } 347,
{ 71: } 348,
{ 72: } 349,
{ 73: } 350,
{ 74: } 359,
{ 75: } 371,
{ 76: } 381,
{ 77: } 392,
{ 78: } 403,
{ 79: } 414,
{ 80: } 425,
{ 81: } 436,
{ 82: } 447,
{ 83: } 458,
{ 84: } 458,
{ 85: } 458,
{ 86: } 469,
{ 87: } 480,
{ 88: } 491,
{ 89: } 502,
{ 90: } 512,
{ 91: } 523,
{ 92: } 523,
{ 93: } 523,
{ 94: } 523,
{ 95: } 534,
{ 96: } 545,
{ 97: } 556,
{ 98: } 567,
{ 99: } 578,
{ 100: } 578,
{ 101: } 579,
{ 102: } 580,
{ 103: } 581,
{ 104: } 582,
{ 105: } 583,
{ 106: } 584,
{ 107: } 585,
{ 108: } 586,
{ 109: } 586,
{ 110: } 589,
{ 111: } 590,
{ 112: } 592,
{ 113: } 593,
{ 114: } 593,
{ 115: } 593,
{ 116: } 604,
{ 117: } 614,
{ 118: } 625,
{ 119: } 626,
{ 120: } 627,
{ 121: } 628,
{ 122: } 629,
{ 123: } 630,
{ 124: } 631,
{ 125: } 632,
{ 126: } 633,
{ 127: } 634,
{ 128: } 635,
{ 129: } 636,
{ 130: } 637,
{ 131: } 638,
{ 132: } 639,
{ 133: } 640,
{ 134: } 651,
{ 135: } 662,
{ 136: } 673,
{ 137: } 684,
{ 138: } 695,
{ 139: } 706,
{ 140: } 717,
{ 141: } 728,
{ 142: } 738,
{ 143: } 749,
{ 144: } 760,
{ 145: } 771,
{ 146: } 782,
{ 147: } 792,
{ 148: } 803,
{ 149: } 814,
{ 150: } 824,
{ 151: } 835,
{ 152: } 846,
{ 153: } 847,
{ 154: } 848,
{ 155: } 849,
{ 156: } 851,
{ 157: } 852,
{ 158: } 853,
{ 159: } 864,
{ 160: } 874,
{ 161: } 875,
{ 162: } 876,
{ 163: } 877,
{ 164: } 878,
{ 165: } 879,
{ 166: } 880,
{ 167: } 881,
{ 168: } 882,
{ 169: } 883,
{ 170: } 884,
{ 171: } 894,
{ 172: } 905,
{ 173: } 915,
{ 174: } 926,
{ 175: } 937,
{ 176: } 947,
{ 177: } 958,
{ 178: } 969,
{ 179: } 979,
{ 180: } 989,
{ 181: } 1000,
{ 182: } 1011,
{ 183: } 1022,
{ 184: } 1033,
{ 185: } 1043,
{ 186: } 1054,
{ 187: } 1065,
{ 188: } 1066,
{ 189: } 1067,
{ 190: } 1068,
{ 191: } 1079,
{ 192: } 1090,
{ 193: } 1100,
{ 194: } 1110,
{ 195: } 1121,
{ 196: } 1131,
{ 197: } 1141,
{ 198: } 1151,
{ 199: } 1162,
{ 200: } 1173,
{ 201: } 1183,
{ 202: } 1194,
{ 203: } 1205,
{ 204: } 1216,
{ 205: } 1227,
{ 206: } 1237,
{ 207: } 1247,
{ 208: } 1257,
{ 209: } 1267
);

yyth : array [0..yynstates-1] of Integer = (
{ 0: } 0,
{ 1: } 0,
{ 2: } 43,
{ 3: } 86,
{ 4: } 88,
{ 5: } 90,
{ 6: } 93,
{ 7: } 96,
{ 8: } 99,
{ 9: } 102,
{ 10: } 115,
{ 11: } 127,
{ 12: } 138,
{ 13: } 150,
{ 14: } 161,
{ 15: } 172,
{ 16: } 184,
{ 17: } 185,
{ 18: } 186,
{ 19: } 186,
{ 20: } 198,
{ 21: } 210,
{ 22: } 221,
{ 23: } 232,
{ 24: } 232,
{ 25: } 232,
{ 26: } 232,
{ 27: } 232,
{ 28: } 234,
{ 29: } 235,
{ 30: } 247,
{ 31: } 259,
{ 32: } 270,
{ 33: } 271,
{ 34: } 271,
{ 35: } 271,
{ 36: } 271,
{ 37: } 271,
{ 38: } 272,
{ 39: } 272,
{ 40: } 282,
{ 41: } 283,
{ 42: } 284,
{ 43: } 285,
{ 44: } 286,
{ 45: } 287,
{ 46: } 288,
{ 47: } 289,
{ 48: } 290,
{ 49: } 291,
{ 50: } 294,
{ 51: } 295,
{ 52: } 295,
{ 53: } 295,
{ 54: } 295,
{ 55: } 296,
{ 56: } 297,
{ 57: } 297,
{ 58: } 297,
{ 59: } 297,
{ 60: } 298,
{ 61: } 309,
{ 62: } 320,
{ 63: } 331,
{ 64: } 341,
{ 65: } 342,
{ 66: } 343,
{ 67: } 344,
{ 68: } 345,
{ 69: } 346,
{ 70: } 347,
{ 71: } 348,
{ 72: } 349,
{ 73: } 358,
{ 74: } 370,
{ 75: } 380,
{ 76: } 391,
{ 77: } 402,
{ 78: } 413,
{ 79: } 424,
{ 80: } 435,
{ 81: } 446,
{ 82: } 457,
{ 83: } 457,
{ 84: } 457,
{ 85: } 468,
{ 86: } 479,
{ 87: } 490,
{ 88: } 501,
{ 89: } 511,
{ 90: } 522,
{ 91: } 522,
{ 92: } 522,
{ 93: } 522,
{ 94: } 533,
{ 95: } 544,
{ 96: } 555,
{ 97: } 566,
{ 98: } 577,
{ 99: } 577,
{ 100: } 578,
{ 101: } 579,
{ 102: } 580,
{ 103: } 581,
{ 104: } 582,
{ 105: } 583,
{ 106: } 584,
{ 107: } 585,
{ 108: } 585,
{ 109: } 588,
{ 110: } 589,
{ 111: } 591,
{ 112: } 592,
{ 113: } 592,
{ 114: } 592,
{ 115: } 603,
{ 116: } 613,
{ 117: } 624,
{ 118: } 625,
{ 119: } 626,
{ 120: } 627,
{ 121: } 628,
{ 122: } 629,
{ 123: } 630,
{ 124: } 631,
{ 125: } 632,
{ 126: } 633,
{ 127: } 634,
{ 128: } 635,
{ 129: } 636,
{ 130: } 637,
{ 131: } 638,
{ 132: } 639,
{ 133: } 650,
{ 134: } 661,
{ 135: } 672,
{ 136: } 683,
{ 137: } 694,
{ 138: } 705,
{ 139: } 716,
{ 140: } 727,
{ 141: } 737,
{ 142: } 748,
{ 143: } 759,
{ 144: } 770,
{ 145: } 781,
{ 146: } 791,
{ 147: } 802,
{ 148: } 813,
{ 149: } 823,
{ 150: } 834,
{ 151: } 845,
{ 152: } 846,
{ 153: } 847,
{ 154: } 848,
{ 155: } 850,
{ 156: } 851,
{ 157: } 852,
{ 158: } 863,
{ 159: } 873,
{ 160: } 874,
{ 161: } 875,
{ 162: } 876,
{ 163: } 877,
{ 164: } 878,
{ 165: } 879,
{ 166: } 880,
{ 167: } 881,
{ 168: } 882,
{ 169: } 883,
{ 170: } 893,
{ 171: } 904,
{ 172: } 914,
{ 173: } 925,
{ 174: } 936,
{ 175: } 946,
{ 176: } 957,
{ 177: } 968,
{ 178: } 978,
{ 179: } 988,
{ 180: } 999,
{ 181: } 1010,
{ 182: } 1021,
{ 183: } 1032,
{ 184: } 1042,
{ 185: } 1053,
{ 186: } 1064,
{ 187: } 1065,
{ 188: } 1066,
{ 189: } 1067,
{ 190: } 1078,
{ 191: } 1089,
{ 192: } 1099,
{ 193: } 1109,
{ 194: } 1120,
{ 195: } 1130,
{ 196: } 1140,
{ 197: } 1150,
{ 198: } 1161,
{ 199: } 1172,
{ 200: } 1182,
{ 201: } 1193,
{ 202: } 1204,
{ 203: } 1215,
{ 204: } 1226,
{ 205: } 1236,
{ 206: } 1246,
{ 207: } 1256,
{ 208: } 1266,
{ 209: } 1276
);


var yyn : Integer;

label start, scan, action;

begin

start:

  (* initialize: *)

  yynew;

scan:

  (* mark positions and matches: *)

  for yyn := yykl[yystate] to     yykh[yystate] do yymark(yyk[yyn]);
  for yyn := yymh[yystate] downto yyml[yystate] do yymatch(yym[yyn]);

  if yytl[yystate]>yyth[yystate] then goto action; (* dead state *)

  (* get next character: *)

  yyscan;

  (* determine action: *)

  yyn := yytl[yystate];
  while (yyn<=yyth[yystate]) and not (yyactchar in yyt[yyn].cc) do inc(yyn);
  if yyn>yyth[yystate] then goto action;
    (* no transition on yyactchar in this state *)

  (* switch to new state: *)

  yystate := yyt[yyn].s;

  goto scan;

action:

  (* execute action: *)

  if yyfind(yyrule) then
    begin
      yyaction(yyrule);
      if yyreject then goto action;
    end
  else if not yydefault and yywrap() then
    begin
      yyclear;
      return(0);
    end;

  if not yydone then goto start;

  yylex := yyretval;

end(*yylex*);


