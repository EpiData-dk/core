"Name"     = 'Enter the name of the grammar'
"Author"   = 'Enter your name'
"Version"  = 'The version of the grammar and/or language'
"About"    = 'A short description of the grammar'

"Start Symbol" = <Program>

! ------------------------------------------------- Sets

{ID Head}      = {Letter} + [_]
{ID Tail}      = {Alphanumeric} + [_]
{String Chars} = {Printable} + {HT} - ["]
{FileNam Chars}= {Alphanumeric} + [/\:.]
{DateDeviders} = [/.-]

! ------------------------------------------------- Terminals

Identifier    = {ID Head}{ID Tail}*
String        = '"' {String Chars}* '"'
Integer       = '-'*{Digit}+
!Float         = '-'*{Digit}+'.'{Digit}+
!Hex           = '$'{Digit}+
Inf           = 'INFINITY'
NrmDate       = {Digit}{Digit}{DateDeviders}{Digit}{Digit}{DateDeviders}{Digit}{Digit}{Digit}{Digit}
RevDate       = {Digit}{Digit}{Digit}{Digit}{DateDeviders}{Digit}{Digit}{DateDeviders}{Digit}{Digit}

tRange        = 'RANGE'
tLegal        = 'LEGAL'
tUse          = 'USE'
tComment      = 'COMMENT'
tShow         = 'SHOW'
tMustEnt      = 'MUSTENTER'
tRepeat       = 'REPEAT'
tJumps        = 'JUMPS'
tReset        = 'RESET'
tNoEnter      = 'NOENTER'
tAfter        = 'AFTER'
tBefore       = 'BEFORE'
tEntry        = 'ENTRY'
tIf           = 'IF'
tThen         = 'THEN'
tElse         = 'ELSE'
tEndIf        = 'ENDIF'
tEnd          = 'END'
tType         = 'TYPE'
tStatusBar    = 'STATUSBAR'


! ------------------------------------------------- Rules

<Program> ::= <GlobalBlocks>

<GlobalBlocks> ::= Identifier <FieldBlockList> tEnd

<FieldBlockList>
              ::= <FieldBlock> <FieldBlockList>
               |  <FieldBlock>

<FieldBlock>  ::= tRange <RangeDefs>
               |  <LegalBlock>
               |  <CommentLegalBlock>
               |  tMustEnt
               |  tRepeat
               |  <JumpsBlock>
               |  tNoEnter
               |  <CommandBlock>
               |  tAfter tEntry <CommandBlockList> tEnd
               |  tBefore tEntry <CommandBlockList> tEnd


<RangeDefs>   ::= Integer Integer
               |  '-'Inf Integer
               |  Integer Inf
               |  <DateFmt> <DateFmt>
               
<DateFmt>     ::= NrmDate
               |  RevDate

<LegalBlock>  ::= tLegal <IntList> tEnd
               |  tLegal tUse Identifier
              
<IntList>     ::= Integer <IntList>
               |  Integer

<CommentLegalBlock>
              ::= tComment tLegal <IntStrPairList> tEnd
               |  tComment tLegal String
               |  tComment tLegal tUse Identifier tShow
               |  tComment tLegal tUse Identifier
               
<IntStrPairList>
              ::= <IntStrPair> <IntStrPairList>
               |  <IntStrPair>

<IntStrPair>  ::= Integer String
              
<JumpsBlock>  ::= tJumps <JumpsHeader> <IntIdentPairList> tEnd
               |  tJumps <IntIdentPairList> tEnd
               
<JumpsHeader> ::= tReset
               |  Integer tReset
               
<IntIdentPairList>
              ::= <IntIdentPair> <IntIdentPairList>
               |  <IntIdentPair>

<IntIdentPair> ::= Integer Identifier

<CommandBlockList>
               ::= <CommandBlock> <CommandBlockList>
                |  <CommandBlock>

<CommandBlock> ::= <IfBlock>

<IfBlock>      ::= tIf <Expression> tThen <CommandBlockList> tEndIf
                |  tIf <Expression> tThen <CommandBlockList> tElse <CommandBlockList> tEndIf


<Expression>  ::= <Expression> '>'  <Add Exp>
               |  <Expression> '<'  <Add Exp>
               |  <Expression> '<=' <Add Exp>
               |  <Expression> '>=' <Add Exp>
               |  <Expression> '==' <Add Exp>    !Equal
               |  <Expression> '<>' <Add Exp>    !Not equal
               |  <Add Exp>

<Add Exp>     ::= <Add Exp> '+' <Mult Exp>
               |  <Add Exp> '-' <Mult Exp>
               |  <Mult Exp>

<Mult Exp>    ::= <Mult Exp> '*' <Negate Exp>
               |  <Mult Exp> '/' <Negate Exp>
               |  <Negate Exp>

<Negate Exp>  ::= '-' <Value>
               |  <Value>

!Add more values to the rule below - as needed

<Value>       ::= Identifier
               |  Integer
               |  '(' <Expression> ')'
